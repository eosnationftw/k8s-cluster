---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus
  namespace: flux-system
spec:
  interval: 6h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: flux-system
  annotations:
    helm.fluxcd.io/uninstall: true
spec:
  interval: 6h
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "51.9.2"
      sourceRef:
        kind: HelmRepository
        name: prometheus
  targetNamespace: monitoring
  install:
    createNamespace: true

  values: 
    prometheus:
      ingress:
        enabled: true
        ingressClassName: traefik
        # ingressClassName: nginx
        path: /prometheus
      prometheusSpec:
        enableFeatures:
          - remote-write-receiver
    grafana:
      ingress:
        enabled: true
        ingressClassName: traefik
        # ingressClassName: nginx
        path: /grafana
      # Data sources to have traces and logs
      additionalDataSources:
        - name: Loki
          type: loki
          uid: Loki
          access: proxy
          url: http://monitoring-loki:3100
          correlations:
          - targetUID: Tempo
            label: "Tempo traces"
            description: "Related traces stored in Tempo"
          jsonData:
            derivedFields:
              - name: "traceID"
                matcherRegex: "trace_id=(\\w+)"
                url: "$${__value.raw}"
                datasourceUid: Tempo
        - name: Tempo
          type: tempo
          uid: Tempo
          access: proxy
          url: http://monitoring-tempo:3100
          jsonData:
            httpMethod: GET
            tracesToLogs:
              datasourceUid: 'Loki'
              tags: ['k8s.pod.name']
              mappedTags: [{ key: 'k8s.pod.name', value: 'k8s_pod_name' }]
              mapTagNamesEnabled: true
              spanStartTimeShift: '-1h'
              spanEndTimeShift: '1h'
              filterByTraceID: true
              filterBySpanID: false
            serviceMap:
              datasourceUid: 'Prometheus'
            search:
              hide: false
            nodeGraph:
              enabled: true
            lokiSearch:
              datasourceUid: 'Loki'